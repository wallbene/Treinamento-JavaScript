{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_httpService","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","reduce","arrayAnterior","array","concat","catch","Erro","erro","resolve","reject","get","objetos","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","lista","Error","apagaTodos","listaAtual","obterNegociacoes","filter","some","existente","isEquals"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../daos/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService{\n\n    constructor(){\n        this._httpService = new HttpService();\n    }\n\n    obterNegociacoes(){\n        return Promise.all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada()\n            ]).then(negociacoes =>{\n                return negociacoes.reduce((arrayAnterior, array) =>\n                 arrayAnterior.concat(array), [])\n            }).catch(erro => {\n                throw new Erro(erro)\n            });\n    }\n\n    obterNegociacoesDaSemana(){\n\n        return new Promise((resolve, reject) => {\n            this._httpService.get(\"/negociacoes/semana\")\n                .then((objetos) => \n                    resolve(objetos.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))))\n                .catch((erro) => {\n                    console.log(erro);\n                    reject(\"Não foi possível obter as negociações da semana!\");   \n                });\n                        \n        });\n    }\n\n    obterNegociacoesDaSemanaAnterior(){\n\n        return new Promise((resolve, reject) => {\n            this._httpService.get(\"/negociacoes/anterior\")\n                .then((objetos) => \n                    resolve(objetos.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))))\n                .catch((erro) => {\n                    console.log(erro);\n                    reject(\"Não foi possível obter as negociações da semana anterior!\");   \n                });\n        });\n    }\n\n    obterNegociacoesDaSemanaRetrasada(){\n        return new Promise((resolve, reject) => {\n            this._httpService.get(\"/negociacoes/retrasada\")\n                .then((objetos) => \n                    resolve(objetos.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))))\n                .catch((erro) => {\n                    console.log(erro);\n                    reject(\"Não foi possível obter as negociações da semana retrasada!\");   \n                });\n        });\n    }\n\n    cadastra(negociacao){\n        return ConnectionFactory.getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => \"Negociação adicionada com sucesso\")\n            .catch(() => \"Não foi possível adicionar negociação\");\n    }\n    lista(){\n        return ConnectionFactory.getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.lista())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"Não foi possível listar as negociações\");\n            });\n    }\n    apagaTodos(){\n        return ConnectionFactory.getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"Não foi possível apagar as negociações\");\n            });\n    }\n    importa(listaAtual){\n\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                    negociacoes.filter((negociacao) =>\n                        !listaAtual.negociacoes.some((existente) => \n                            existente.isEquals(negociacao))\n                ))\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"não foi possível importar negociações\");\n            });\n    }\n}"]}